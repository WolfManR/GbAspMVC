@using UI.Services
@using MailTemplates.Razor
@using Microsoft.AspNetCore.Mvc.Rendering
@using UI.DataModels
@inject TemplatesRepository _templatesRepository
@inject MailContentBuilder _previewBuilder
@inject ModelsGenerator _previewDataGenerator

<h3>TemplateEditor</h3>

<div class="row">
	<div class="col-sm-6">
		<div class="card">
			<div class="card-body">
				<h5 class="card-title">Input Template</h5>
				<label asp-for="Name"></label>
				<InputText type="text" @bind="TemplateName"/>
				<label>Select data models that will be used in preview</label>
				<InputSelect @bind-Value="DataModelType">
					<option value="Book">Book</option>
				</InputSelect>
				<InputTextArea @bind="RawTemplate" class="form-control" rows="3"></InputTextArea>
				<button @onclick="ShowPreview" class="btn btn-primary">See result</button>
				<button @onclick="SaveTemplate" class="btn btn-primary">Save</button>
			</div>
		</div>
	</div>
	@if (Preview is not null)
	{
		<div class="col-sm-6">
			<div class="card">
				<div class="card-body">
					@Preview.Value
				</div>
			</div>
		</div>
	}
</div>

@code {
	private MarkupString? Preview { get; set; }

	[Parameter]
	public  string? TemplateName { get; set; }

	[Parameter]
	public string? RawTemplate { get; set; }

	public string DataModelType { get; set; }

	private async Task ShowPreview()
	{
		object data = DataModelType switch
			{
				"Book" => _previewDataGenerator.GenerateBooks().First(),
					_ => null
			};
		if(data is null) return;
		Preview = (MarkupString)await _previewBuilder.BuildWithTemplate(RawTemplate, data);
	}

	private void SaveTemplate()
	{
		if(TemplateName is null || RawTemplate is null) return;
		_templatesRepository.Save(new TemplateRecord()
		{
			RawTemplate = RawTemplate,
			Name = TemplateName
		});
	}
}
