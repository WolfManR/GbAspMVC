@page "/"
@using UI.DataModels
@using UI.Pages.Templates
@using UI.Services
@inject TemplatesRepository _templatesRepository

<div>
	<ul>
		<li><button @onclick="()=>OpenRecordEditor()">Create</button></li>
		<li><a href=""></a></li>
		<li><a href=""></a></li>
	</ul>

	@if (IsTemplatesVisible)
	{
		<table>
			<thead>
			<tr>
				<th>Name</th>
				<th>RawTemplate</th>
				<th></th>
			</tr>
			</thead>
			<tbody>
			@foreach (TemplateRecord template in Templates)
			{
				<tr>
					<td>@template.Name</td>
					<td>@template.RawTemplate</td>
					<td>
						<button @onclick="() => OpenRecordEditor(template.Name, template.RawTemplate)">Edit</button>
						<button @onclick="() => DeleteRecord(template.Name)">Delete</button>
					</td>
				</tr>
			}
			</tbody>
		</table>
	}
	
	@if (IsTemplateEditorVisible)
	{
		<TemplateEditor Template="@TemplateRecordOnEdit"
		                OnCreateDone="HandleTemplateCreate"
		                OnEditDone="HandleTemplateEdit">

		</TemplateEditor>
	}
</div>

@code {
	public ICollection<TemplateRecord> Templates { get; set; }

	private bool IsTemplatesVisible { get; set; }
	private bool IsTemplateEditorVisible { get; set; }

	private TemplateRecord TemplateRecordOnEdit { get; set; } = new();

	protected override void OnInitialized()
	{
		base.OnInitialized();

		Templates = _templatesRepository.Get().ToList();
		IsTemplatesVisible = true;
	}

	private void OpenRecordEditor(string? name = null, string? rawTemplate = null)
	{
		TemplateRecordOnEdit.Name = name;
		TemplateRecordOnEdit.RawTemplate = rawTemplate;
		IsTemplateEditorVisible = true;
	}

	private void DeleteRecord(string name)
	{
		_templatesRepository.Remove(name);
		Templates = _templatesRepository.Get().ToList();
	}

	private void HandleTemplateCreate(TemplateRecord record)
	{
		Templates.Add(record);
		_templatesRepository.Save(record);
		IsTemplateEditorVisible = false;
	}

	private void HandleTemplateEdit(TemplateRecord record)
	{
		if(Templates.FirstOrDefault(r => r.Name == record.Name) is not {} existRecord) return;
		existRecord.Name = record.Name;
		existRecord.RawTemplate = record.RawTemplate;
		_templatesRepository.Save(record);
		IsTemplateEditorVisible = false;
	}

}
